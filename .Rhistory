library(ggplot2)
data(diamonds)
# Load the ggplot2 library and diamonds dataset
library(ggplot2)
data(diamonds)
# Improved Scatter Plot
# Aesthetics: Mapping variables
ggplot(
data = diamonds,
mapping = aes(
x = carat,
y = price,
color = price
)
) +
# Geometry: Adding scatter plot points
geom_point(size = 1, alpha = 0.6) +
# Geometry: Adding a trend line
geom_smooth(method = "loess", se = FALSE, linetype = "dashed", color = "darkblue") +
# Facet: Creating small multiples by cut quality
facet_wrap(~ cut) +
# Labels: Setting plot title and axis labels
labs(
title = "Diamond Price by Carat Size and Cut Quality",
x = "Carat (Diamond Size)",
y = "Price (USD)",
color = "Price Level"
) +
# Scale: Gradient scale for price levels
scale_color_gradient(low = "#CCE5FF", high = "#003366") +
# Theme: Applying a minimal theme
theme_minimal() +
theme(
legend.position = "right",
plot.title = element_text(hjust = 0.5, face = "bold"),
strip.background = element_rect(fill = "#f2f2f2"),
strip.text = element_text(face = "bold")
)
library(ggplot2)
data(diamonds)
# Load the ggplot2 library and diamonds dataset
library(ggplot2)
data(diamonds)
# Improved Scatter Plot
# Aesthetics: Mapping variables
ggplot(
data = diamonds,
mapping = aes(
x = carat,
y = price,
color = price
)
) +
# Geometry: Adding scatter plot points
geom_point(size = 1, alpha = 0.6) +
# Geometry: Adding a trend line
geom_smooth(method = "loess", se = FALSE, linetype = "dashed", color = "darkblue") +
# Facet: Creating small multiples by cut quality
facet_wrap(~ cut) +
# Labels: Setting plot title and axis labels
labs(
title = "Diamond Price by Carat Size and Cut Quality",
x = "Carat (Diamond Size)",
y = "Price (USD)",
color = "Price Level"
) +
# Scale: Gradient scale for price levels
scale_color_gradient(low = "#CCE5FF", high = "#003366") +
# Theme: Applying a minimal theme
theme_minimal() +
theme(
legend.position = "right",
plot.title = element_text(hjust = 0.5, face = "bold"),
strip.background = element_rect(fill = "#f2f2f2"),
strip.text = element_text(face = "bold")
)
# Load necessary libraries
library(babynames)
library(dplyr)
library(ggplot2)
# Define the selected names
selected_names <- c("James", "Olivia", "Ethan", "Mary")
# Filter and wrangle the data for the selected names
filtered_babynames <- babynames %>%
filter(name %in% selected_names) %>%
distinct(year, sex, name, n) %>%
rename(count = n) %>%
arrange(year, name, sex)
# Create the line plot
ggplot(filtered_babynames, aes(x = year, y = count, color = name, linetype = sex)) +
geom_line(size = 1) +
labs(
title = "Popularity of Selected Names Over Time",
x = "Year",
y = "Total Number of Babies Given Name",
color = "Name",
linetype = "Gender"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16),
axis.title = element_text(size = 12),
legend.title = element_text(size = 10),
legend.position = "right"
)
# Load necessary libraries
library(babynames)
library(dplyr)
library(ggplot2)
# Define the selected names
selected_names <- c("James", "Olivia", "Ethan")
# Data Wrangling: Filter and prepare the data
filtered_babynames <- babynames %>%
filter(name %in% selected_names) %>%
distinct(year, name, n) %>%
rename(count = n) %>%
arrange(year, name)
# Finalized Data Visualization
ggplot(filtered_babynames, aes(x = year, y = count, color = name, linetype = )) +
geom_line(size = 1) +
labs(
title = "Popularity Trends of Selected Names Over Time",
x = "Year",
y = "Popularity (Count)",
color = "Name",
linetype = "Name"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
legend.position = "right"
)
# Load necessary libraries
library(babynames)
library(dplyr)
library(ggplot2)
# Define the selected names
selected_names <- c("James", "Olivia", "Ethan")
# Data Wrangling: Filter and prepare the data
filtered_babynames <- babynames %>%
filter(name %in% selected_names) %>%
distinct(year, name, n) %>%
rename(count = n) %>%
arrange(year, name)
# Define custom line types and colors
line_types <- c("James" = "solid", "Olivia" = "dashed", "Ethan" = "dotted")
line_colors <- c("James" = "blue", "Olivia" = "red", "Ethan" = "green")
# Create the plot
ggplot(filtered_babynames, aes(x = year, y = count, color = name, linetype = name)) +
geom_line(size = 1) +
scale_color_manual(values = line_colors) +      # Apply custom colors
scale_linetype_manual(values = line_types) +     # Apply custom line types
labs(
title = "Popularity of Selected Names Over Time",
x = "Year",
y = "Total Number of People with Name",
color = "Name",
linetype = "Name"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
legend.position = "right"
)
# Load necessary libraries
library(babynames)
library(dplyr)
library(ggplot2)
# Define the selected names
selected_names <- c("James", "Olivia", "Ethan")
# Data Wrangling: Filter and prepare the data
filtered_babynames <- babynames %>%
filter(name %in% selected_names) %>%
distinct(year, name, n) %>%
rename(count = n) %>%
arrange(year, name)
# Define custom line types and colors
line_types <- c("James" = "solid", "Olivia" = "dashed", "Ethan" = "dotted")
line_colors <- c("James" = "blue", "Olivia" = "red", "Ethan" = "green")
# Create the plot
ggplot(filtered_babynames, aes(x = year, y = count, color = name, linetype = name)) +
geom_line(size = 1) +
scale_color_manual(values = line_colors) +      # Apply custom colors
scale_linetype_manual(values = line_types) +     # Apply custom line types
labs(
title = "Popularity of Selected Names Over Time",
x = "Year",
y = "Total Number of People with Name",
color = "Name",
linetype = "Name"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
legend.position = "right"
)
# Load necessary libraries
library(babynames)
library(dplyr)
library(ggplot2)
# Define the selected names
selected_names <- c("James", "Olivia", "Ethan")
# Data Wrangling: Filter and prepare the data
filtered_babynames <- babynames %>%
filter(name %in% selected_names) %>%
distinct(year, name, n) %>%
rename(count = n) %>%
arrange(year, name)
# Finalized Data Visualization
ggplot(filtered_babynames, aes(x = year, y = count, color = name, linetype = )) +
geom_line(size = 1) +
labs(
title = "Popularity Trends of Selected Names Over Time",
x = "Year",
y = "Popularity (Count)",
color = "Name",
linetype = "Name"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9),
legend.position = "right"
)
# Load necessary libraries
library(babynames)
library(dplyr)
library(ggplot2)
# Define the selected names
selected_names <- c("James", "Olivia", "Ethan", "Mary")
# Filter and wrangle the data for the selected names
filtered_babynames <- babynames %>%
filter(name %in% selected_names) %>%
distinct(year, sex, name, n) %>%
rename(count = n) %>%
arrange(year, name, sex)
# Create the line plot
ggplot(filtered_babynames, aes(x = year, y = count, color = name, linetype = sex)) +
geom_line(size = 1) +
labs(
title = "Popularity of Selected Names Over Time",
x = "Year",
y = "Total Number of Babies Given Name",
color = "Name",
linetype = "Gender"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 16),
axis.title = element_text(size = 12),
legend.title = element_text(size = 10),
legend.position = "right"
)
